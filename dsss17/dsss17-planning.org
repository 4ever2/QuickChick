FLOW OF TOPICS

Basic QC
  - completely automatic behavior
      - a few simple exercises -- find the bug in XX

small examples (lists and similar)

Coq typeclasses (intro)
  TypeClasses.v

core QC typeclasses
  - generator monad
     - basic combinators (elements, oneOf, ...)
     - exercises: build a generator for XX
     - CoArbitrary
     - generators for polymorphic properties (nat, Li-Yao stuff, etc.)
  - shrinking
      - build a custom shrinker for XX
      - question: what is wrong with this shrinker?  
           - might generate the same example
           - might generate larger examples

(talk about the fact that longer test cases often find examples better --
see John's talk, and perhaps even use the "1-2-3-4-5 in order" example in
detail) 

return to the small examples

more QC typeclasses
  sized?

ways of measuring distributions
   "Tuning random distributions is 
      - a creative process
      - based on observations
      - highly effective"
   (and see other observations in John's talk)

code coverage is a very bad success metric, but a rather good heuristic for
when your tests are not good enough

mutation testing
  
final comments about testing
  - simple properties: very high payoff
      - round trip properties
      - regression testing
  - invariants that are going to be used for proof
  - complete specs may have smaller payoff

----------

Sized generators
  - GenSized class

Polymorphic generators (nat)

custom shrinking

generating dependent generators
  - Using QuickChick to automatically derive generators satisfying 
    preconditions in the form of inductive datatypes
  - Notation
  - Precise form required from predicates
  - Narrowing caveats (too much backtracking if instantiating too early)
  - Workarounds (group predicates together - commit b2e4ad922e20b87818cb6162d714fe498e4dc356 from DeepSpec demo for an example)

super-simple compiler

?case study: IFC or lambda terms

--------

Case study: Vellvm

-------- 

?case study: DeepWeb

Zoe-proofs  (typeclasses, mainly, plus just a hint of the proofs)
  - 1-hour talk based on her section of popl submission
