dist: trusty
services:
  - docker
language: ocaml
cache:
  apt: true
  directories:
  - $HOME/.opam
  - $HOME/Library/Caches/Homebrew
addons:
  apt:
    sources:
    - avsm
    packages:
    - opam
    - aspcud
env:
  global:
  - NJOBS=2
  - OPAMYES=true
  - REPO=$DOCKER_USERNAME/quickchick
  matrix:
      - COMPILER="4.05.0"
      - COMPILER="4.06.0"
      - COMPILER="4.06.1"
matrix:
  fast_finish: true
os:
    - linux
    - osx

before_install:
    if [ $TRAVIS_OS_NAME = osx ]; then
    curl -sSL https://rvm.io/mpapis.asc | gpg --import -;
    rvm get stable;
    brew update; brew install opam; fi

install:
- "[ -e .opam ] || travis_wait opam init -j ${NJOBS} --compiler=${COMPILER} -n -y"
- eval $(opam config env)
- opam config var root
- opam repo add coq-released https://coq.inria.fr/opam/released || true
- opam list
- ocamlc -v

script:
- set -e
- echo 'Building QuickChick...';
  echo -en 'travis_fold:start:QuickChick.build';
  opam update;
  opam pin add . ;
  opam remove --force coq-quickchick;
  opam install coq-quickchick;
  echo -en 'travis_fold:end:QuickChick.build'
- echo 'Testing IFC...';
  echo -en 'travis_fold:start:QuickChick.test.ifc-basic';
  make -C examples/ifc-basic;
  echo -en 'travis_fold:end:QuickChick.test.ifc-basic'
- echo 'Testing Red-black tree...';
  echo -en 'travis_fold:start:QuickChick.test.RedBlack';
  make -C examples/RedBlack;
  echo -en 'travis_fold:end:QuickChick.test.RedBlack'
- echo 'Testing STLC...';
  echo -en 'travis_fold:start:QuickChick.test.stlc';
  make -C examples/stlc;
  echo -en 'travis_fold:end:QuickChick.test.stlc'
- echo 'Testing Multifile Mutation...';
  echo -en 'travis_fold:start:QuickChick.test.multifile-mutation';
  make -C examples/multifile-mutation test;
  echo -en 'travis_fold:end:QuickChick.test.multifile-mutation'
- echo 'Testing C Mutation...';
  echo -en 'travis_fold:start:QuickChick.test.c-mutation';
  make -C examples/c-mutation test;
  echo -en 'travis_fold:end:QuickChick.test.c-mutation'

deploy:
    provider: script
    script:
        if [ $TRAVIS_REPO_SLUG = QuickChick/QuickChick ]
        && [ $TRAVIS_PULL_REQUEST = false ]
        && [ $TRAVIS_OS_NAME = linux ]; then
        docker pull -a $REPO;
        docker build .;
        docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD;
        docker push $REPO;
        docker build -t debian -f Dockerfile.debian .;
        docker tag debian $REPO:debian;
        docker push $REPO:debian;
        fi
    on:
        branch: master
